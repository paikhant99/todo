// Mocks generated by Mockito 5.4.5 from annotations
// in todo/test/unit/controller/goals_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo/data/entity/goal.dart' as _i5;
import 'package:todo/data/persistence/goal_dao.dart' as _i2;
import 'package:todo/data/repository/goal_repository.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGoalDao_0 extends _i1.SmartFake implements _i2.GoalDao {
  _FakeGoalDao_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GoalRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGoalRepository extends _i1.Mock implements _i3.GoalRepository {
  MockGoalRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GoalDao get goalDao =>
      (super.noSuchMethod(
            Invocation.getter(#goalDao),
            returnValue: _FakeGoalDao_0(this, Invocation.getter(#goalDao)),
          )
          as _i2.GoalDao);

  @override
  _i4.Future<List<_i5.Goal>> loadAllGoals() =>
      (super.noSuchMethod(
            Invocation.method(#loadAllGoals, []),
            returnValue: _i4.Future<List<_i5.Goal>>.value(<_i5.Goal>[]),
          )
          as _i4.Future<List<_i5.Goal>>);
}
